package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"

	"github.com/pluralsh/trace-shield-controller/api/observability/v1alpha1"
	"github.com/pluralsh/trace-shield/graph/generated"
)

// Types is the resolver for the types field.
func (r *blockedQueryResolver) Types(ctx context.Context, obj *v1alpha1.BlockedQuery) ([]v1alpha1.BlockedQueryType, error) {
	output := obj.Types
	return output, nil
}

// Types is the resolver for the types field.
func (r *blockedQueryInputResolver) Types(ctx context.Context, obj *v1alpha1.BlockedQuery, data []v1alpha1.BlockedQueryType) error {
	obj.Types = data
	return nil
}

// BlockedQuery returns generated.BlockedQueryResolver implementation.
func (r *Resolver) BlockedQuery() generated.BlockedQueryResolver { return &blockedQueryResolver{r} }

// BlockedQueryInput returns generated.BlockedQueryInputResolver implementation.
func (r *Resolver) BlockedQueryInput() generated.BlockedQueryInputResolver {
	return &blockedQueryInputResolver{r}
}

type blockedQueryResolver struct{ *Resolver }
type blockedQueryInputResolver struct{ *Resolver }
