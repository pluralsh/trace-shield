# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - graph/*.graphqls

# Where should the generated server code go?
exec:
  filename: graph/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/federation.go
#   package: graph

# Where should any generated models go?
model:
  filename: graph/model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: graph/resolvers
  package: resolvers
  filename_template: "{name}.resolvers.go"

# Optional: turn on use ` + "`" + `gqlgen:"fieldName"` + "`" + ` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: turn off to make struct-type struct fields not use pointers
# e.g. type Thing struct { FieldA OtherThing } instead of { FieldA *OtherThing }
# struct_fields_always_pointers: true

# Optional: turn off to make resolvers return values instead of pointers for structs
# resolvers_always_return_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
#  - "github.com/pluralsh/trace-shield/graph/model"
 - "github.com/pluralsh/trace-shield-controller/api/observability/v1alpha1"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int32
  Float:
    model:
      - github.com/99designs/gqlgen/graphql.Float
  Duration:
    model:
      - github.com/pluralsh/trace-shield/graph/custom.Duration
  FloatMap:
    model:
      - github.com/pluralsh/trace-shield/graph/custom.FloatMap
  ForwardingRuleMap:
    model:
      - github.com/pluralsh/trace-shield/graph/custom.ForwardingRuleMap
  User:
    fields:
      groups:
        resolver: true
  Group:
    fields:
      members:
        resolver: true
  OAuth2Client:
    fields:
      owner:
        resolver: true
      loginBindings:
        resolver: true
  LoginBindings:
    fields:
      users:
        resolver: true
      groups:
        resolver: true
  Organization:
    fields:
      admins:
        resolver: true
  ObservabilityTenant:
    fields:
      admins:
        resolver: true
      metricsReaders:
        resolver: true
      metricsWriters:
        resolver: true
      metricsDeleters:
        resolver: true
      metricsRulesReaders:
        resolver: true
      metricsRulesWriters:
        resolver: true
      metricsRulesDeleters:
        resolver: true
      metricsAlertsReaders:
        resolver: true
      metricsAlertsWriters:
        resolver: true
      logsReaders:
        resolver: true
      logsWriters:
        resolver: true
      logsDeleters:
        resolver: true
      logsRulesReaders:
        resolver: true
      logsRulesWriters:
        resolver: true
      logsRulesDeleters:
        resolver: true
      tracesReaders:
        resolver: true
      tracesWriters:
        resolver: true
  ObservabilityTenantPermissionBindings:
    fields:
      users:
        resolver: true
      groups:
        resolver: true
      oauth2Clients:
        resolver: true
