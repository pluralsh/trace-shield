- id: frontend:public
  upstream:
    url: http://frontend.default.svc.cluster.local
    preserve_host: true
  match:
    url: <http|https>://localhost.pluraldev.sh:4455</|/registration.*|/welcome.*|/recovery.*|/verification.*|/login.*|/error|/404|/500|/.*.css|./*.js|/.*.png|/.*.svg|/assets/.*|/static/.*|/users|/groups|/settings.*|/.*.json>
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: frontend:consent:public
  upstream:
    url: http://frontend.default.svc.cluster.local
    preserve_host: true
  match:
    url: <http|https>://localhost.pluraldev.sh:4455/consent
    methods:
      - GET
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: api-server:graphiql:public
  upstream:
    url: http://api-server.default.svc.cluster.local:8082
    strip_path: /graphiql
    preserve_host: true
  match:
    url: <http|https>://localhost.pluraldev.sh:4455/graphiql
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: api-server:graphql:public
  upstream:
    url: http://api-server.default.svc.cluster.local:8082
    preserve_host: true
  match:
    url: <http|https>://localhost.pluraldev.sh:4455/graphql
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: api-server:consent:public
  upstream:
    url: http://api-server.default.svc.cluster.local:8082
    preserve_host: true
  match:
    url: <http|https>://localhost.pluraldev.sh:4455/consent
    methods:
      - POST
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: ory:kratos:public
  upstream:
    url: http://kratos-public.kratos
    strip_path: /.ory/kratos/public
    preserve_host: true
  match:
    url: <http|https>://localhost.pluraldev.sh:4455/.ory/kratos/public/<.*>
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: ory:hydra:public
  upstream:
    url: http://hydra-public.hydra:4444
    preserve_host: true
  match:
    url: <http|https>://hydra.localhost.pluraldev.sh:4455<.*>
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
- id: grafana:grafana:public
  upstream:
    url: http://grafana.grafana:80
    preserve_host: true
  match:
    url: <http|https>://grafana.localhost.pluraldev.sh:4455<.*>
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
      - OPTIONS
  authenticators:
    - handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop
# - id: ory:kratos-selfservice-ui-node:anonymous
#   upstream:
#     url: http://oauth-stack-kratos-selfservice-ui-node # TODO: use proper templating
#     preserve_host: true
#   match:
#     methods:
#       - GET
#       - POST # needed for consent
#     # TODO: cleanup templating
#     url: https://kratos.mimir-cloud.pluraldev.sh<{/,/registration,/welcome,/recovery,/verification,/login,/consent,/error,/404,/500,/**.css,/**.js,/**.png,/**.svg,/assets/**}>
#   authenticators:
#     - handler: noop
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: noop
#       config: {}
# - id: ory:kratos-selfservice-ui-node:protected
#   upstream:
#     url: http://oauth-stack-kratos-selfservice-ui-node # TODO: use proper templating
#     preserve_host: true
#   match:
#     methods:
#       - GET
#     # TODO: cleanup templating
#     url: https://kratos.mimir-cloud.pluraldev.sh/<{debug,dashboard,settings,sessions}{/,}>
#   authenticators:
#     - handler: cookie_session
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: id_token
#   errors:
#     - handler: redirect
#       config:
#         to: https://kratos.mimir-cloud.pluraldev.sh/login
# - id: grafana:mimir-api:protected
#   upstream:
#     url: http://mimir-nginx.mimir # TODO: use proper templating
#     preserve_host: true
#   match:
#     methods:
#       - GET
#       - POST
#       - PUT
#       - DELETE
#       - PATCH
#       - OPTIONS
#     # TODO: cleanup templating
#     url: https://mimir.mimir-cloud.pluraldev.sh/api<**>
#   authenticators:
#     - handler: oauth2_introspection
#       # config:
#       #   required_scope:
#       #     - grafana:read
#       #     - grafana:write
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: header
#       config:
#         headers:
#           X-Scope-OrgID: mimir-cloud-oauth2
# - id: grafana:mimir-prometheus:protected
#   upstream:
#     url: http://mimir-nginx.mimir # TODO: use proper templating
#     preserve_host: true
#   match:
#     methods:
#       - GET
#       - POST
#       - PUT
#       - DELETE
#       - PATCH
#       - OPTIONS
#     # TODO: cleanup templating
#     url: https://mimir.mimir-cloud.pluraldev.sh/prometheus<**>
#   authenticators:
#     - handler: oauth2_introspection
#       # config:
#       #   required_scope:
#       #     - grafana:read
#       #     - grafana:write
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: header
#       config:
#         headers:
#           X-Scope-OrgID: mimir-cloud|mimir-cloud-2|mimir-cloud-oauth2
#   errors:
#     - handler: redirect
#       config:
#         to: https://kratos.mimir-cloud.pluraldev.sh/login
