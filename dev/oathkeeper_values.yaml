# image:
#   repository: oryd/oathkeeper
#   tag: v0.40.0
# sidecar:
#   image:
#     repository: oryd/oathkeeper-maester
#     tag: v0.1.7
maester:
  enabled: false
  nameOverride: trace-shield-oathkeeper-maester
deployment:
  automountServiceAccountToken: true
oathkeeper:
  mutatorIdTokenJWKs: |
    {
      "keys": [
        {
          "use": "sig",
          "kty": "RSA",
          "kid": "a2aa9739-d753-4a0d-87ee-61f101050277",
          "alg": "RS256",
          "n": "zpjSl0ySsdk_YC4ZJYYV-cSznWkzndTo0lyvkYmeBkW60YHuHzXaviHqonY_DjFBdnZC0Vs_QTWmBlZvPzTp4Oni-eOetP-Ce3-B8jkGWpKFOjTLw7uwR3b3jm_mFNiz1dV_utWiweqx62Se0SyYaAXrgStU8-3P2Us7_kz5NnBVL1E7aEP40aB7nytLvPhXau-YhFmUfgykAcov0QrnNY0DH0eTcwL19UysvlKx6Uiu6mnbaFE1qx8X2m2xuLpErfiqj6wLCdCYMWdRTHiVsQMtTzSwuPuXfH7J06GTo3I1cEWN8Mb-RJxlosJA_q7hEd43yYisCO-8szX0lgCasw",
          "e": "AQAB",
          "d": "x3dfY_rna1UQTmFToBoMn6Edte47irhkra4VSNPwwaeTTvI-oN2TO51td7vo91_xD1nw-0c5FFGi4V2UfRcudBv9LD1rHt_O8EPUh7QtAUeT3_XXgjx1Xxpqu5goMZpkTyGZ-B6JzOY3L8lvWQ_Qeia1EXpvxC-oTOjJnKZeuwIPlcoNKMRU-mIYOnkRFfnUvrDm7N9UZEp3PfI3vhE9AquP1PEvz5KTUYkubsfmupqqR6FmMUm6ulGT7guhBw9A3vxIYbYGKvXLdBvn68mENrEYxXrwmu6ITMh_y208M5rC-hgEHIAIvMu1aVW6jNgyQTunsGST3UyrSbwjI0K9UQ",
          "p": "77fDvnfHRFEgyi7mh0c6fAdtMEMJ05W8NwTG_D-cSwfWipfTwJJrroWoRwEgdAg5AWGq-MNUzrubTVXoJdC2T4g1o-VRZkKKYoMvav3CvOIMzCBxBs9I_GAKr5NCSk7maksMqiCTMhmkoZ5RPuMYMY_YzxKNAbjBd9qFLfaVAqs",
          "q": "3KEmPA2XQkf7dvtpY1Xkp1IfMV_UBdmYk7J6dB5BYqzviQWdEFvWaSATJ_7qV1dw0JDZynOgipp8gvoL-RepfjtArhPz41wB3J2xmBYrBr1sJ-x5eqAvMkQk2bd5KTor44e79TRIkmkFYAIdUQ5JdVXPA13S8WUZfb_bAbwaCBk",
          "dp": "5uyy32AJkNFKchqeLsE6INMSp0RdSftbtfCfM86fZFQno5lA_qjOnO_avJPkTILDT4ZjqoKYxxJJOEXCffNCPPltGvbE5GrDXsUbP8k2-LgWNeoml7XFjIGEqcCFQoohQ1IK4DTDN6cmRh76C0e_Pbdh15D6TydJEIlsdGuu_kM",
          "dq": "aegFNYCEojFxeTzX6vIZL2RRSt8oJKK-Be__reu0EUzYMtr5-RdMhev6phFMph54LfXKRc9ZOg9MQ4cJ5klAeDKzKpyzTukkj6U20b2aa8LTvxpZec6YuTVSxxu2Ul71IGRQijTNvVIiXWLGddk409Ub6Q7JqkyQfvdwhpWnnUk",
          "qi": "P68-EwgcRy9ce_PZ75c909cU7dzCiaGcTX1psJiXmQAFBcG0msWfsyHGbllOZG27pKde78ORGJDYDNk1FqTwsogZyCP87EiBmOoqXWnMvKYfJ1DOx7x42LMAGwMD3bgQj9jgRACxFJG4n3NI6uFlFruyl_CLQzwW_rQFHshLK7Q"
        }
      ]
    }
  managedAccessRules: true
  config:
    log:
      level: debug
    serve:
      proxy:
        tls:
          cert:
            base64: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVuakNDQW9hZ0F3SUJBZ0lKQUlzT2VJWjdiY0lqTUEwR0NTcUdTSWIzRFFFQkN3VUFNQll4RkRBU0JnTlYKQkFNTUMxbHZkWEpEYjIxd1lXNTVNQjRYRFRJek1ETXlNakV5TVRBd09Gb1hEVEkxTVRJeE5qRXlNVEF3T0ZvdwpGakVVTUJJR0ExVUVBd3dMV1c5MWNrTnZiWEJoYm5rd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDcGNHVWFNdllsNnVhUjB6QjVTNU1YcFMwYVdTVG9UajkrWmZUUnlLRDVGbFdqZmh1WVEvckwKbWxrZlRCbEZkQ1RKaGxvRTRMcHZqQkxiOWhhWWUwbDE4NVg3cmNCWExtME9sUXhhQzliZ3o4R2hvZUM3OE82cgpJZ0dXVkxWRnZQeHVhSWVWT2d5MnlXaGtjR053Z082ekROdGRjYW40L0ppV2xzeHdSckhjZ3NBQzNTVXBUTEkrClFhcVpjWUlsaUZGLzE3MHBNaTNpanJPYlZJRWwrMDV4VnYzbGRsc0RMTlhFSnlrTWJsTDV1K0xPeFYvS3NyYnoKT1hXM0tVVWQxWTZVcFFlZlZIdnYvNVhLd1psR0JKaGRsMlc1endsM21oVHk1U0srSXNhUmg5bnVMT0YvWFd6MwpTU3N3dlVvbWhhS3hBMFNoRmQ2UmViOXdJZmRTRHYxbkFnTUJBQUdqZ2U0d2dlc3dFUVlKWUlaSUFZYjRRZ0VCCkJBUURBZ1pBTUFzR0ExVWREd1FFQXdJRjREQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFkQmdOVkhRNEUKRmdRVS8rc1c0YW9JV2tUZGphQ2ViTlBaV1pDa1dOOHdNQVlEVlIwakJDa3dKNkVhcEJnd0ZqRVVNQklHQTFVRQpBd3dMV1c5MWNrTnZiWEJoYm5tQ0NRQ1hoN3A5UFhDbDBUQmpCZ05WSFJFRVhEQmFnaFpzYjJOaGJHaHZjM1F1CmNHeDFjbUZzWkdWMkxuTm9naGdxTG14dlkyRnNhRzl6ZEM1d2JIVnlZV3hrWlhZdWMyaUNDV3h2WTJGc2FHOXoKZElJTEtpNXNiMk5oYkdodmMzU0NDVEV5Tnk0d0xqQXVNWUlET2pveE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQwpBUUE5UHRabTg0QVVGV3VyZTFGbjJTaFBONHJFVjVtWVBhQ2sxa3o0SzZFV3JaajVBK1g0dURQbm92UHduWDdwCjRFVzhnbEMrRkFJNndkdzZRYlNGeU9SVUloMnlIU0duNkFTREl0eUxWdjlkTUt3VUpUK3dtaEs2NDlhV0xjLzAKRXNKYm9FZlcxdEJyYVlySFlIRWcyQklUanVyOHV2VDByMGNNNFpyT25rTHp3SjgxTFpqOEFHWDYrYnJRM3FYbgprOWw0Sm5peXV5UlVTQlo2SEtacnE5aStGWUV5N1BuTngrSzA5SU1JQ2pjUG9NS0lLOFA4YzlMaGdRQ3dZeHNZClpLU1h0aFpsVlQ4bVNYdWhqUjBhY0VBK3BLQ1JiUGpqNzRnZDVSNFBSWVA0L3V0aTE5a1NpS04xcnpkTUZXVmcKbjBvVjdua01sbG9MeVVYbGdkdC9ld0krS3loM3h3enBxekRXdmFzdUE4d0JUQ2J5Uk1rREYwWVJQV1hrNis2SQp1TndwTmw0QVpHWlBUQzhNdDJiaWdpUTNPWnd1M05XL2lSRHMyZUFrTGJYeWVYYXdaeGpic3R4MjNkdStFYVBmCitYbVZUNld4MzZ3YzkvVURucmVGa2UvaGFBY2p5b1RFRVFCUnI1ZFlXcUhkc1RwdG1DcVNxKzJhMnpWMERIN0sKQnFOSjZLa3VjaENMT2VxdjFxdWNDdjNpcTQxZGJiKzdtZjdNVHFiK0M0M2tUd0lrUTJxanNQa3UrY1hHSTN2NwpjUVNrZ0o3TFRIR2VKWTk0cnRja1N4Y3hiR29TVXdDOFpVeEZ0cU1TU09BcmVmNU9KUHpGZ0E0V3FLaWg3TnZYCjFVN3lXMlJ2N1p6SlI1ckZKYTZNN3lycGJTSW5IdW16UWR1ZTN6cmVKam9pc0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          key:
            base64: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVhCbEdqTDJKZXJta2RNd2VVdVRGNlV0R2xrazZFNC9mbVgwMGNpZytSWlZvMzRiCm1FUDZ5NXBaSDB3WlJYUWt5WVphQk9DNmI0d1MyL1lXbUh0SmRmT1YrNjNBVnk1dERwVU1XZ3ZXNE0vQm9hSGcKdS9EdXF5SUJsbFMxUmJ6OGJtaUhsVG9NdHNsb1pIQmpjSUR1c3d6YlhYR3ArUHlZbHBiTWNFYXgzSUxBQXQwbApLVXl5UGtHcW1YR0NKWWhSZjllOUtUSXQ0bzZ6bTFTQkpmdE9jVmI5NVhaYkF5elZ4Q2NwREc1Uytidml6c1ZmCnlySzI4emwxdHlsRkhkV09sS1VIbjFSNzcvK1Z5c0daUmdTWVhaZGx1YzhKZDVvVTh1VWl2aUxHa1lmWjdpemgKZjExczkwa3JNTDFLSm9XaXNRTkVvUlhla1htL2NDSDNVZzc5WndJREFRQUJBb0lCQUNwSGFtTGtMbmw5cUxUZwpicXNGaVptUDFMWkxZaU01U3l5ZUFqM0tneWhFUTNBOVNtTnZLd2hjNWpvaUFmaExwOVpGV1BiNG9HeXZGaEdlCjBUcVJJTjUydm9rRGJRZ1VCSkJyN3A0VmNETytnNEZ5WkNKaFZ4eUtxcnk1UEZZL2R2bVJ5YXNaeGd4aUsxTk0KbS9ONXFKWXk4aFhhQStDbUh1a01qY3pDUnlWUGJ1dk94djdzT3dzUHMrSWVpcEVxSlRqNnBuREl5M1FMYmRGYQpDNW00RTUzS0pEQ0xLbWU2NS8reGo1aHI1bk04YmtvanovQTdhZGxIbVROcERTQmpYN0ZQM0t1VEFKWHdxbEx5CnE1ZkFWM3M3Rk9XQTlOb1B0ZitocWtBclRMMzRBSTBmaUpQalZQRGt2TmhJM2UwaFV2Q2RMN1Nxa2dDUmVBVjAKOFFMcnZ3a0NnWUVBME5ueGhaNjNOVjFGZ0pqaWpDNHBmakgvZ08xUlIxUXFCRlo0TzJxK1lhNUt4K3o0Vjl4aQo4bUs1R1FVMUs4OGY4K0dObjBZd0JSTUJjUmF5RmhXQXQzL1VDTU5jbEk5d2haY3BsYjRubTJzN0MyMk4zaHRYCkx3RDJIem1QUmZieWJZSWlYTFN3YXBnd0VaQ1d6UWRMai84Q3YwN05LcTJvcVNqNEpqUnNNK3NDZ1lFQXo3QzIKbXFWcGs3N2txdGV0ZGY2UGRVL1JzMlBiVXVlRVV5VWRjWDFnUUlnb3A5VG5XbUYxRDJCWFM5aEViU1AxTUE1NwpkUC9BKzdrM1ZtQUc5b2MwU3Y0MzFMM1NuS3lhNU9Bbm51MXlkR253QlZDLzcxY2VKK2lEekE1Z0RBa0w4OEVYCllEZEYrU1c2bU9XMVZYZ0lGalB5OVhreWNtK080OXNKbDZKWUNYVUNnWUJ4UDR6Z3FNU3RraXNLNVZ3TEtVamsKbmhYdkFrQ05qZ3pPbDFqUTF6dnUyY1RCRGpWSDUwQmNNTDR2M0F3TitsMVlNRmxNSVpJT1hsVHN6cUs0cU9aSQpHbStPWk9rQndab0JSb3VOSURSMzZUaDJKT3pGb0V1eE9ETTlrVWVvWjVUalhxcGxYTEZBeTg5YzV1dHV0K0w0CmJRNC9VR3FlRnRhYkM1VXJta2VHQ3dLQmdRQzBOdTlNSTBvSVJMVWd0VU16eHE1dXFkTVphUVZ2MjZxTGh3SVUKYnlrczlianBZS2xiV0lOOTB5Z01qTjFiSXI5bmNybVhuVEMwZkZQVEpFSUdldTFhUVZycXc4ZlQ0VVlLWWFLZgptZ1FkbGFzS3diVzZGWXI2TUJ6azNIaGxHUmlBNjBUQVhWWGZTZWl2TVd0MmZVL3ZEQ2ErNytwaE9BSHlIeWNrCnAxN2kzUUtCZ1FESGxPTHZ2aUZpTnpjTHFqSDFZcGx6cWRvYXVHOWdLenpEQjR2alNvMHRpdnNQMi9PblI5RTAKWnVaOUFZWjNCVTFoUGpQc2JES3dnMm1FZTd1cWxhWndrbjZFTlNRZTZxazVuRkRCaEhORlJ2SkJPRC92WnZDUgpBUDl5eEpYMmFXUFRCeUU3QktHLzNLWmgvZlRPYy9uQnRzbGRNTU9pTHRYVGMzd3lzNWdQM0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
        port: 4455
    access_rules:
      matching_strategy: regexp
    authenticators:
      anonymous:
        enabled: true
        config:
          subject: guest

      cookie_session:
        enabled: true
        config:
          check_session_url: http://kratos-public.kratos/sessions/whoami
          preserve_path: true
          extra_from: "@this"
          subject_from: "identity.id"
          only:
            - ory_kratos_session

      oauth2_introspection:
        enabled: true
        config:
          introspection_url: http://hydra-admin.hydra:4445/admin/oauth2/introspect
          # scope_strategy: exact

      noop:
        enabled: true

    authorizers:
      allow:
        enabled: true
      # remote_json:
      #   enabled: true
      #   config:
      #     remote: http://kubricks-keto-read/relation-tuples/check
      #     payload: |
      #       {
      #         "subject": "{{ print .Subject }}",
      #         "resource": "{{ printIndex .MatchContext.RegexpCaptureGroups 0 }}"
      #       }
    mutators:
      noop:
        enabled: true

      id_token:
        enabled: true
        config:
          issuer_url: https://localhost.pluraldev.sh:4455/
          jwks_url: file:///etc/secrets/mutator.id_token.jwks.json
          claims: |
            {
              "session": {{ .Extra | toJson }}
            }
      header:
        enabled: true
        config:
          headers: {}
      hydrator:
        enabled: true
        config:
          api:
            url: http://temp-go-mimir/
    errors:
      fallback:
        - json
      handlers:
        redirect:
          enabled: true
          config:
            to: https://localhost.pluraldev.sh/login
            when:
              - error:
                  - unauthorized
                  - forbidden
                request:
                  header:
                    accept:
                      # We don't want this for application/json requests, only browser requests!
                      - text/html
        json:
          enabled: true
          config:
            verbose: true

ingress:
  proxy:
    enabled: false
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: kratos.mimir-cloud.pluraldev.sh
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: mimir.mimir-cloud.pluraldev.sh
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - kratos.mimir-cloud.pluraldev.sh
          - mimir.mimir-cloud.pluraldev.sh
        secretName: kubricks-oathkeeper-proxy-tls
